name: packages
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  conda_build:
    name: Build Conda Packages
    runs-on: 'ubuntu-latest'
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    env:
      PKG_TEST_PYTHON: "--test-python=py37"
      MPLBACKEND: "Agg"
      CONDA_UPLOAD_TOKEN: ${{ secrets.CONDA_UPLOAD_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: 3.7
          channels: pyviz/label/dev,conda-forge,nodefaults
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: conda setup
        run: |
          conda install "pyctdev>=0.5"
          doit ecosystem_setup
      - name: doit env_capture
        run: |
          doit env_capture
      - name: conda build
        run: doit package_build $PKG_TEST_PYTHON --test-group=all
      - name: dev deploy
        if: (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc'))
        run: |
          doit package_upload --token=$CONDA_UPLOAD_TOKEN --label=dev
      - name: main deploy
        if: (!(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        run: |
          doit package_upload --token=$CONDA_UPLOAD_TOKEN --label=dev --label=main
  pip_build:
    name: Build PyPI Packages
    runs-on: 'ubuntu-latest'
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    env:
      PKG_TEST_PYTHON: "--test-python=py37"
      PYTHON_VERSION: "3.7"
      MPLBACKEND: "Agg"
      PPU: ${{ secrets.PPU }}
      PPP: ${{ secrets.PPP }}
      PYPI: "https://upload.pypi.org/legacy/"
      MAMBA_NO_BANNER: 1
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channel-priority: strict
          miniconda-version: "latest"
          channels: pyviz/label/dev,conda-forge,nodefaults
          mamba-version: "*"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - name: conda setup
        run: |
          conda install "pyctdev>=0.5"
          doit ecosystem_setup
          conda create -n test-environment python=$PYTHON_VERSION pyctdev
      - name: env setup
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit develop_install -o tests --conda-mode=mamba
          pip uninstall -y datashader
          doit pip_on_conda
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: pip build
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit ecosystem=pip package_build $PKG_TEST_PYTHON --test-group=unit
      - name: pip upload
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit ecosystem=pip package_upload -u $PPU -p $PPP -r $PYPI
