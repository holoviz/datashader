name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'

jobs:
  test_suite:
    name: Tests on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0} 
    env:
      DESC: "Python ${{ matrix.python-version }} tests"
      CHANS_DEV: "-c pyviz/label/dev -c conda-forge -c nodefaults"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow
      - name: conda setup 3.6
        if: matrix.python-version == '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda create -c pyviz/label/dev -n test-environment python=${{ matrix.python-version }} pyctdev
      - name: conda setup > 3.6
        if: matrix.python-version != '3.6'
        run: |
          conda update -n base -c defaults conda
          conda create ${{ env.CHANS_DEV}} -n test-environment python=${{ matrix.python-version }} pyctdev
      - name: doit develop_install 3.6
        if: matrix.python-version == '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit develop_install -c pyviz/label/dev -o tests -o examples
          conda install -c pyviz/label/dev "panel=0.12"
      - name: doit develop_install > 3.6
        if: matrix.python-version != '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit develop_install ${{ env.CHANS_DEV}} -o tests -o examples
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit test_lint
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_lint
      - name: doit test_unit_deploy
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit_deploy
      - name: doit test_unit_nojit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit_nojit
        env:
          NUMBA_DISABLE_JIT: 1
      - name: doit test_examples
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_examples
      - name: codecov
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
