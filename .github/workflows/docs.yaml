name: docs
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  workflow_dispatch:
    inputs:
      target:
        description: 'dev or main'     
        required: true
        default: 'dev'

jobs:
  build_docs:
    name: Documentation
    runs-on: 'ubuntu-latest'
    timeout-minutes: 120
    defaults:
      run:
        shell: bash -l {0}
    env:
      DESC: "Documentation build"
      CHANS_DEV: "-c pyviz/label/dev -c bokeh -c conda-forge"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: conda setup
        run: |
          conda config --set always_yes True
          conda install -c pyviz "pyctdev>=0.5"
          doit ecosystem_setup
          doit env_create ${{ env.CHANS_DEV}} --python=3.8
      - name: doit develop_install
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit develop_install ${{ env.CHANS_DEV}} -o doc
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: fetch data
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          datashader fetch-data --path=examples --force
      - name: generate rst
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          nbsite generate-rst --org holoviz --project-name panel
      - name: build docs
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          nbsite build --what=html --output=builtdocs --org holoviz --project-name datashader
      - name: Deploy dev
        uses: peaceiris/actions-gh-pages@v3
        if: (github.event.inputs.target == 'dev' || contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc'))
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          external_repository: pyviz-dev/datashader
          publish_dir: ./builtdocs
          force_orphan: true
      - name: Deploy main
        if: (github.event.inputs.target == 'main' || !(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./builtdocs
          cname: datashader.org
          force_orphan: true
