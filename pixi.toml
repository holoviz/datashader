[project]
name = "datashader"
channels = ["pyviz/label/dev", "conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tasks]
download-data = "python scripts/download_data.py"
install = "python -m pip install --no-deps --disable-pip-version-check -e ."

[activation.env]
PYTHONIOENCODING = "utf-8"

[environments]
test-39 = ["py39", "test-core", "test", "example", "test-example", "test-unit-task"]
test-310 = ["py310", "test-core", "test", "example", "test-example", "test-unit-task"]
test-311 = ["py311", "test-core", "test", "example", "test-example", "test-unit-task"]
test-312 = ["py312", "test-core", "test", "example", "test-example", "test-unit-task"]
test-core = ["py312", "test-core", "test-unit-task"]
test-gpu = ["py312", "test-core", "test-gpu"]
docs = ["py311", "example", "doc"]
build = ["py311", "build"]
lint = ["py311", "lint"]

[dependencies]
numba = "*"  # At top as this dictates Python version
colorcet = "*"
multipledispatch = "*"
numpy = "*"
pandas = "*"
param = "*"
pillow = "*"
pip = "*"
pyct = "*"
requests = "*"
scipy = "*"
setuptools = "*" # distutils for pyct
toolz = "*"
xarray = "*"

[feature.py39.dependencies]
python = "3.9.*"

[feature.py310.dependencies]
python = "3.10.*"
bokeh_sampledata = "*"

[feature.py311.dependencies]
python = "3.11.*"
bokeh_sampledata = "*"

[feature.py312.dependencies]
python = "3.12.*"
bokeh_sampledata = "*"

[feature.example.dependencies]
bokeh = ">3.1"
dask-core = "*"
dask-geopandas = "*"
fastparquet = "*"
geodatasets = "*"
geopandas-base = "*"
graphviz = "*"
holoviews = "*"
matplotlib-base = ">=3.3"
networkx = "*"
panel = ">1.1"
pyogrio =  "*"
python-graphviz = "*"
python-snappy = "*"
rasterio = "*"
scikit-image = "*"
shapely = ">=2.0.0"
spatialpandas = "*"
streamz = "*"

# =============================================
# =================== TESTS ===================
# =============================================
[feature.test-core.dependencies]
psutil = "*"
pytest = "*"
pytest-benchmark = "*"
pytest-cov = "*"
pytest-github-actions-annotate-failures = "*"
pytest-xdist = "*"

[feature.test-unit-task.tasks] # So it is not showing up in the test-gpu environment
test-unit = 'pytest datashader -n logical --dist loadgroup --benchmark-skip'
test-unit-nojit = { cmd = 'pytest datashader -k "not test_tiles" -n logical --dist loadgroup --benchmark-skip', env = { NUMBA_DISABLE_JIT = '1' } }
test-benchmark = 'pytest datashader/tests --benchmark'

[feature.test.dependencies]
dask-core = "*"
dask-expr = "*"
dask-geopandas = "*"
geodatasets = "*"
geopandas-base = "*"
netcdf4 = "*"
pyarrow = "*"
pyogrio =  "*"
rasterio = "*"
rioxarray = "*"
scikit-image = "*"
shapely = ">=2.0.0"
spatialpandas = "*"

[feature.test-example.dependencies]
nbval = "*"

[feature.test-example.tasks]
test-example = { cmd = 'pytest -n logical --dist loadscope --nbval-lax examples --benchmark-skip', env = { DASK_DATAFRAME__QUERY_PLANNING = "False" } }

[feature.test-gpu]
channels = ["rapidsai"]
platforms = ["linux-64"]

[feature.test-gpu.activation.env]
NUMBA_CUDA_LOW_OCCUPANCY_WARNINGS = '0'

[feature.test-gpu.dependencies]
cuda-version = "12.2.*"
cudf = "24.10.*"
cupy = "*"
dask-cudf = "*"
dask-expr = "*"
librmm = { version = "*", channel = "rapidsai" }
rmm = { version = "*", channel = "rapidsai" }

[feature.test-gpu.tasks]
test-gpu = "python -m pytest datashader/tests -n logical --dist loadgroup --gpu --benchmark-skip"
test-benchmark = 'pytest datashader/tests --benchmark --gpu'

# =============================================
# =================== DOCS ====================
# =============================================
[feature.doc.dependencies]
nbsite = ">=0.8.4,<0.9.0"
numpydoc = "*"
sphinxcontrib-mermaid = "*"

[feature.doc.activation.env]
DASK_DATAFRAME__QUERY_PLANNING = "False"

[feature.doc.tasks]
_docs-generate-rst = 'nbsite generate-rst --org holoviz --project-name datashader'
_docs-generate = 'nbsite build --what=html --output=builtdocs --org holoviz --project-name datashader'

[feature.doc.tasks.docs-build]
depends_on = ['_docs-generate-rst', '_docs-generate']

# =============================================
# ================== BUILD ====================
# =============================================
[feature.build.dependencies]
python-build = "*"
conda-build = "*"

[feature.build.tasks]
build-conda = 'bash scripts/conda/build.sh'
build-pip = 'python -m build .'

[feature.build.activation.env]
MPLBACKEND = "Agg"
DASK_DATAFRAME__QUERY_PLANNING = "False"

# =============================================
# =================== LINT ====================
# =============================================
[feature.lint.dependencies]
pre-commit = "*"

[feature.lint.tasks]
lint = 'pre-commit run --all-files'
lint-install = 'pre-commit install'
