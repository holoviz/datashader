[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "datashader"
dynamic = ["version"]
description = "Data visualization toolchain based on aggregating into a grid"
readme = "README.md"
license = { text = "New BSD" }
requires-python = ">=3.9"
authors = [{ name = "HoloViz developers", email = "developers@holoviz.org" }]
maintainers = [{ name = "HoloViz developers", email = "developers@holoviz.org" }]
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    'colorcet',
    'multipledispatch',
    'numba',
    'numpy',
    'pandas',
    'param',
    'pyct',
    'requests',
    'scipy',
    'toolz',
    'packaging',
    'xarray',
]

[project.urls]
Homepage = "https://datashader.org"
Source = "https://github.com/holoviz/datashader"
HoloViz = "https://holoviz.org/"

[project.optional-dependencies]
tests = ["pytest"]

[project.scripts]
datashader = "datashader.__main:main"

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "no-guess-dev" }

[tool.hatch.build.targets.wheel]
include = ["datashader"]

[tool.hatch.build.targets.sdist]
include = ["datashader", "scripts"]

[tool.hatch.build.targets.sdist.force-include]
examples = "datashader/examples"

[tool.hatch.build.hooks.vcs]
version-file = "datashader/_version.py"

[tool.codespell]
ignore-words-list = "trough,thi,ser"

[tool.ruff]
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    "E",
    "F",
    "NPY",
    "UP",
    "W",
]
ignore = [
    "UP038", # isinstance and issubclass uses a |-separated union
    # The following should be enabled in the future
    "UP030",  # format-literals
    "UP031",  # printf-string-formatting
    "UP032",  # f-string
]

[tool.ruff.lint.per-file-ignores]
"test_mpl_ext.py" = ["E402"] # Module level import not at top of file

[tool.pytest.ini_options]
addopts = [
    "--pyargs",
    "--doctest-modules",
    "--doctest-ignore-import-errors",
    "--strict-config",
    "--strict-markers",
    "--color=yes",
]
minversion = "7"
xfail_strict = true
log_cli_level = "INFO"
filterwarnings = [
    "error",
    "ignore:Passing a (SingleBlockManager|BlockManager) to (Series|GeoSeries|DataFrame|GeoDataFrame) is deprecated:DeprecationWarning", # https://github.com/holoviz/spatialpandas/issues/137
    "ignore:Accessing the underlying geometries through the `.data`:DeprecationWarning:dask_geopandas.core", # https://github.com/geopandas/dask-geopandas/issues/264
    # 2024-11
    "ignore:numpy.ndarray size changed, may indicate binary incompatibility:RuntimeWarning", # https://github.com/pydata/xarray/issues/7259
    "ignore:\\s*Dask dataframe query planning is disabled because dask-expr is not installed:FutureWarning", # https://github.com/holoviz/spatialpandas/issues/146
    "ignore:The legacy Dask DataFrame implementation is deprecated:FutureWarning", # https://github.com/holoviz/spatialpandas/issues/146
]
